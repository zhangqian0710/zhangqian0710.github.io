<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Miracle&#39;BLOG</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-08-20T08:07:02.740Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Zhang Qian</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>7.无聊写写之java小技巧</title>
    <link href="http://yoursite.com/2019/08/20/7.%E6%97%A0%E8%81%8A%E5%86%99%E5%86%99%E4%B9%8Bjava%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
    <id>http://yoursite.com/2019/08/20/7.无聊写写之java小技巧/</id>
    <published>2019-08-20T07:54:56.424Z</published>
    <updated>2019-08-20T08:07:02.740Z</updated>
    
    <content type="html"><![CDATA[<h2 id="无聊写写之java小技巧"><a href="#无聊写写之java小技巧" class="headerlink" title="无聊写写之java小技巧"></a>无聊写写之java小技巧</h2><h6 id="1-通过java反射获得java某个类中的方法名字："><a href="#1-通过java反射获得java某个类中的方法名字：" class="headerlink" title="1.通过java反射获得java某个类中的方法名字："></a>1.通过java反射获得java某个类中的方法名字：</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Thread.currentThread().getStackTrace()[<span class="number">1</span>].getMethodName();</span><br></pre></td></tr></table></figure><h6 id="2-比较某一天时间和系统当前日期的大小，比系统日期大返回1，否则返回0"><a href="#2-比较某一天时间和系统当前日期的大小，比系统日期大返回1，否则返回0" class="headerlink" title="2.比较某一天时间和系统当前日期的大小，比系统日期大返回1，否则返回0"></a>2.比较某一天时间和系统当前日期的大小，比系统日期大返回1，否则返回0</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">timeIsBig</span><span class="params">(Date time)</span></span>&#123;</span><br><span class="line">       DateFormat df = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd"</span>);</span><br><span class="line">       String dt1 = df.format(time);</span><br><span class="line">       String dt2 = df.format(<span class="keyword">new</span> Date());</span><br><span class="line">       <span class="keyword">if</span> (dt1.compareTo(dt2) &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">           <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">       &#125;  <span class="keyword">else</span> &#123;</span><br><span class="line">           <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h6 id="3-解析IP地址（获取country国家、region地区、province省份、city城市、operator服务商）获得成为一个map"><a href="#3-解析IP地址（获取country国家、region地区、province省份、city城市、operator服务商）获得成为一个map" class="headerlink" title="3.解析IP地址（获取country国家、region地区、province省份、city城市、operator服务商）获得成为一个map"></a>3.解析IP地址（获取country国家、region地区、province省份、city城市、operator服务商）获得成为一个map</h6><p>ip.db下载：<a href="https://github.com/lionsoul2014/ip2region" target="_blank" rel="noopener">https://github.com/lionsoul2014/ip2region</a> （来源网络）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">//本地创建ip.db文件，通过FileUtils.copyInputStreamToFile把ip2region.db内容通过流复制</span></span><br><span class="line">        String tmpDir = System.getProperties().getProperty(<span class="string">"java.io.tmpdir"</span>);</span><br><span class="line">        String dbPath = tmpDir + <span class="string">"ip.db"</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            File file = <span class="keyword">new</span> File(dbPath);</span><br><span class="line">            FileUtils.copyInputStreamToFile(IPUtil.class.getClassLoader().getResourceAsStream(<span class="string">"ip2region.db"</span>), file);</span><br><span class="line">            <span class="comment">//查询算法</span></span><br><span class="line">            <span class="keyword">int</span> algorithm = DbSearcher.BTREE_ALGORITHM; <span class="comment">//B-tree</span></span><br><span class="line">            <span class="comment">//DbSearcher.BINARY_ALGORITHM //Binary</span></span><br><span class="line">            <span class="comment">//DbSearcher.MEMORY_ALGORITYM //Memory</span></span><br><span class="line">            DbConfig config = <span class="keyword">new</span> DbConfig();</span><br><span class="line">            DbSearcher searcher = <span class="keyword">new</span> DbSearcher(config, dbPath);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//define the method</span></span><br><span class="line">            Method method = <span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">switch</span> (algorithm) &#123;</span><br><span class="line">                <span class="keyword">case</span> DbSearcher.BTREE_ALGORITHM:</span><br><span class="line">                    method = searcher.getClass().getMethod(<span class="string">"btreeSearch"</span>, String.class);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> DbSearcher.BINARY_ALGORITHM:</span><br><span class="line">                    method = searcher.getClass().getMethod(<span class="string">"binarySearch"</span>, String.class);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> DbSearcher.MEMORY_ALGORITYM:</span><br><span class="line">                    method = searcher.getClass().getMethod(<span class="string">"memorySearch"</span>, String.class);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            DataBlock dataBlock = <span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">if</span> (Util.isIpAddress(ip) == <span class="keyword">false</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">"Error: Invalid ip address"</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            dataBlock = (DataBlock) method.invoke(searcher, ip);</span><br><span class="line">            String[] strArray = dataBlock.getRegion().split(<span class="string">"\\|"</span>);</span><br><span class="line">            Map ipAddressData = <span class="keyword">new</span> HashMap();</span><br><span class="line">            <span class="comment">//国家</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="string">"0"</span>.equals(strArray[<span class="number">0</span>])) &#123;</span><br><span class="line">                ipAddressData.put(<span class="string">"country"</span>, <span class="keyword">null</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">"澳门"</span>.equals(strArray[<span class="number">0</span>]) || <span class="string">"香港"</span>.equals(strArray[<span class="number">0</span>]) || <span class="string">"台湾"</span>.equals(strArray[<span class="number">0</span>]))&#123;</span><br><span class="line">                ipAddressData.put(<span class="string">"country"</span>, <span class="string">"中国"</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                ipAddressData.put(<span class="string">"country"</span>, strArray[<span class="number">0</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//地区</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="string">"0"</span>.equals(strArray[<span class="number">1</span>])) &#123;</span><br><span class="line">                ipAddressData.put(<span class="string">"region"</span>, <span class="keyword">null</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                ipAddressData.put(<span class="string">"region"</span>, strArray[<span class="number">1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//省份</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="string">"0"</span>.equals(strArray[<span class="number">2</span>])) &#123;</span><br><span class="line">                ipAddressData.put(<span class="string">"province"</span>, <span class="keyword">null</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                ipAddressData.put(<span class="string">"province"</span>, strArray[<span class="number">2</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//地市</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="string">"0"</span>.equals(strArray[<span class="number">3</span>])) &#123;</span><br><span class="line">                ipAddressData.put(<span class="string">"city"</span>, <span class="keyword">null</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                ipAddressData.put(<span class="string">"city"</span>, strArray[<span class="number">3</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//运营方</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="string">"0"</span>.equals(strArray[<span class="number">4</span>])) &#123;</span><br><span class="line">                ipAddressData.put(<span class="string">"operator"</span>, <span class="keyword">null</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                ipAddressData.put(<span class="string">"operator"</span>, strArray[<span class="number">4</span>]);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> ipAddressData;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>===============================================</p><p>个人github：<a href="https://github.com/zhangqian0710?tab=repositories" target="_blank" rel="noopener">https://github.com/zhangqian0710?tab=repositories</a></p><p>个人csdn:<a href="https://mp.csdn.net/mdeditor/96853700#" target="_blank" rel="noopener">https://mp.csdn.net/mdeditor/96853700#</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;无聊写写之java小技巧&quot;&gt;&lt;a href=&quot;#无聊写写之java小技巧&quot; class=&quot;headerlink&quot; title=&quot;无聊写写之java小技巧&quot;&gt;&lt;/a&gt;无聊写写之java小技巧&lt;/h2&gt;&lt;h6 id=&quot;1-通过java反射获得java某个类中的方法名字
      
    
    </summary>
    
      <category term="java知识点" scheme="http://yoursite.com/categories/java%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
    
  </entry>
  
  <entry>
    <title>6.配置Mysql读写分离方法</title>
    <link href="http://yoursite.com/2019/08/15/6.%E9%85%8D%E7%BD%AEMysql%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB%E6%96%B9%E6%B3%95/"/>
    <id>http://yoursite.com/2019/08/15/6.配置Mysql读写分离方法/</id>
    <published>2019-08-15T11:59:50.593Z</published>
    <updated>2019-08-19T07:38:04.747Z</updated>
    
    <content type="html"><![CDATA[<h2 id="配置Mysql读写分离方法"><a href="#配置Mysql读写分离方法" class="headerlink" title="配置Mysql读写分离方法"></a>配置Mysql读写分离方法</h2><h4 id="1-在db-properties文件下，配置你的读写库等多个库的配置（包含数据库的url、username、password）"><a href="#1-在db-properties文件下，配置你的读写库等多个库的配置（包含数据库的url、username、password）" class="headerlink" title="1.在db.properties文件下，配置你的读写库等多个库的配置（包含数据库的url、username、password）"></a>1.在db.properties文件下，配置你的读写库等多个库的配置（包含数据库的url、username、password）</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#写库</span><br><span class="line">url=jdbc:mysql://xx.xx.xx.xx:3306/（库名）Unicode=true&amp;characterEncoding=utf8&amp;autoReconnect=true&amp;tinyInt1isBit=false&amp;allowMultiQueries=true</span><br><span class="line">mysqlUsername=XXX</span><br><span class="line">mysqlPassword=XXXX</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#读库</span><br><span class="line">read.url=jdbc:mysql://XX.XX.XX.XX:3306/（库名）Unicode=true&amp;characterEncoding=utf8&amp;allowMultiQueries=true&amp;serverTimezone=Asia/Shanghai</span><br><span class="line">read.mysqlUsername=XXX</span><br><span class="line">read.mysqlPassword=XXXX</span><br></pre></td></tr></table></figure><p>这个文件注意一点，不同库配置的url、username、password 前面的 名字不能相同，以免在spring配置文件中起不到读写分离效果或者冲突。</p><h4 id="2-在srping配置文件中，配置数据库事务，和数据源的bean（读写库通用的bean，其中-参数都是通用）"><a href="#2-在srping配置文件中，配置数据库事务，和数据源的bean（读写库通用的bean，其中-参数都是通用）" class="headerlink" title="2.在srping配置文件中，配置数据库事务，和数据源的bean（读写库通用的bean，其中${}参数都是通用）"></a>2.在srping配置文件中，配置数据库事务，和数据源的bean（读写库通用的bean，其中${}参数都是通用）</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 使用annotation定义事务 --&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">tx:annotation-driven</span> <span class="attr">transaction-manager</span>=<span class="string">"transactionManager"</span> <span class="attr">proxy-target-class</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- 动态数据源配置文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">ignore-unresolvable</span>=<span class="string">"true"</span> <span class="attr">location</span>=<span class="string">"classpath:db.properties"</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 阿里 druid数据库连接池基础配置 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"parentDataSource"</span> <span class="attr">abstract</span>=<span class="string">"true"</span> <span class="attr">class</span>=<span class="string">"com.alibaba.druid.pool.DruidDataSource"</span> <span class="attr">destroy-method</span>=<span class="string">"close"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 数据库基本信息配置 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driverClassName"</span> <span class="attr">value</span>=<span class="string">"$&#123;driverClassName&#125;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"filters"</span> <span class="attr">value</span>=<span class="string">"$&#123;filters&#125;"</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 最大并发连接数 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxActive"</span> <span class="attr">value</span>=<span class="string">"$&#123;maxActive&#125;"</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 初始化连接数量 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"initialSize"</span> <span class="attr">value</span>=<span class="string">"$&#123;initialSize&#125;"</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 配置获取连接等待超时的时间 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxWait"</span> <span class="attr">value</span>=<span class="string">"$&#123;maxWait&#125;"</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 最小空闲连接数 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"minIdle"</span> <span class="attr">value</span>=<span class="string">"$&#123;minIdle&#125;"</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"timeBetweenEvictionRunsMillis"</span> <span class="attr">value</span>=<span class="string">"$&#123;timeBetweenEvictionRunsMillis&#125;"</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 配置一个连接在池中最小生存的时间，单位是毫秒 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"minEvictableIdleTimeMillis"</span> <span class="attr">value</span>=<span class="string">"$&#123;minEvictableIdleTimeMillis&#125;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"validationQuery"</span> <span class="attr">value</span>=<span class="string">"$&#123;validationQuery&#125;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"testWhileIdle"</span> <span class="attr">value</span>=<span class="string">"$&#123;testWhileIdle&#125;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"testOnBorrow"</span> <span class="attr">value</span>=<span class="string">"$&#123;testOnBorrow&#125;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"testOnReturn"</span> <span class="attr">value</span>=<span class="string">"$&#123;testOnReturn&#125;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxOpenPreparedStatements"</span> <span class="attr">value</span>=<span class="string">"$&#123;maxOpenPreparedStatements&#125;"</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 打开removeAbandoned功能 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"removeAbandoned"</span> <span class="attr">value</span>=<span class="string">"$&#123;removeAbandoned&#125;"</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 1800秒，也就是30分钟 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"removeAbandonedTimeout"</span> <span class="attr">value</span>=<span class="string">"$&#123;removeAbandonedTimeout&#125;"</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 关闭abanded连接时输出错误日志 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"logAbandoned"</span> <span class="attr">value</span>=<span class="string">"$&#123;logAbandoned&#125;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-在这个bean下方配置读写库数据源的bean，才用继承上面通用bean的方法，实现整体数据源的配置（-里面的值是db-properties文件中。）"><a href="#3-在这个bean下方配置读写库数据源的bean，才用继承上面通用bean的方法，实现整体数据源的配置（-里面的值是db-properties文件中。）" class="headerlink" title="3.在这个bean下方配置读写库数据源的bean，才用继承上面通用bean的方法，实现整体数据源的配置（${}里面的值是db.properties文件中。）"></a>3.在这个bean下方配置读写库数据源的bean，才用继承上面通用bean的方法，实现整体数据源的配置（${}里面的值是db.properties文件中。）</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 本项目主数据库配置 写库 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"writeDataSource"</span>  <span class="attr">parent</span>=<span class="string">"parentDataSource"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 数据库写库信息配置 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"$&#123;url&#125;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"$&#123;mysqlUsername&#125;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;mysqlPassword&#125;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 本项目主只读库配置 读库 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"readDataSource"</span>  <span class="attr">parent</span>=<span class="string">"parentDataSource"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 数据库只读库信息配置 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"$&#123;read.url&#125;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"$&#123;read.mysqlUsername&#125;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;read.mysqlPassword&#125;"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="4-配置动态数据源bean，根据service接口上的注解取决于用那个库"><a href="#4-配置动态数据源bean，根据service接口上的注解取决于用那个库" class="headerlink" title="4.配置动态数据源bean，根据service接口上的注解取决于用那个库"></a>4.配置动态数据源bean，根据service接口上的注解取决于用那个库</h4><h5 id="（1）在spring配置文件中创建bean"><a href="#（1）在spring配置文件中创建bean" class="headerlink" title="（1）在spring配置文件中创建bean"></a>（1）在spring配置文件中创建bean</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 动态数据源，根据service接口上的注解来决定取哪个数据源 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"dataSource"</span> <span class="attr">class</span>=<span class="string">"com.XXXXXXX.common.spring.DynamicDataSource"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"defaultTargetDataSource"</span> <span class="attr">ref</span>=<span class="string">"writeDataSource"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"targetDataSources"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">map</span> <span class="attr">key-type</span>=<span class="string">"java.lang.String"</span>&gt;</span></span><br><span class="line">              <span class="comment">&lt;!-- write or slave --&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">"write"</span> <span class="attr">value-ref</span>=<span class="string">"writeDataSource"</span>/&gt;</span></span><br><span class="line">              <span class="comment">&lt;!-- read or master   --&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">"read"</span> <span class="attr">value-ref</span>=<span class="string">"readDataSource"</span>/&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">map</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="（2）编写几个java文件完成注解的操作（原理上采用每次调用注解，每次获取注解对应的数据源，然后用完后会清楚数据源）"><a href="#（2）编写几个java文件完成注解的操作（原理上采用每次调用注解，每次获取注解对应的数据源，然后用完后会清楚数据源）" class="headerlink" title="（2）编写几个java文件完成注解的操作（原理上采用每次调用注解，每次获取注解对应的数据源，然后用完后会清楚数据源）"></a>（2）编写几个java文件完成注解的操作（原理上采用每次调用注解，每次获取注解对应的数据源，然后用完后会清楚数据源）</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取@DataSource注解</span></span><br><span class="line"><span class="meta">@Retention</span>(RetentionPolicy.RUNTIME)  </span><br><span class="line"><span class="meta">@Target</span>(ElementType.METHOD)</span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> DataSource &#123;</span><br><span class="line"><span class="function">String <span class="title">value</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DynamicDataSource</span> <span class="keyword">extends</span> <span class="title">AbstractRoutingDataSource</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> Logger logger = LoggerFactory.getLogger(DynamicDataSource.class);</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> Object <span class="title">determineCurrentLookupKey</span><span class="params">()</span> </span>&#123;</span><br><span class="line">String dataSouce = DynamicDataSourceHolder.getDataSouce();</span><br><span class="line"><span class="comment">//logger.info("dataSource : " + dataSouce);</span></span><br><span class="line"><span class="keyword">return</span> dataSouce;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">//------------------</span></span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DynamicDataSourceHolder</span> </span>&#123;</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Logger logger = LoggerFactory.getLogger(DynamicDataSourceHolder.class);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//写库对应的数据源key</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String WRITE = <span class="string">"write"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//读库对应的数据源key</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String READ = <span class="string">"read"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> ThreadLocal&lt;String&gt; holder = <span class="keyword">new</span> ThreadLocal&lt;String&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">putDataSource</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//logger.info("DynamicDataSourceHolder set database: " + name);</span></span><br><span class="line">        holder.set(name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getDataSouce</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//logger.info("DynamicDataSourceHolder get database: " + holder.get());</span></span><br><span class="line">        <span class="keyword">return</span> holder.get();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 清除数据源</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">clearDataSource</span><span class="params">()</span></span>&#123;</span><br><span class="line">holder.remove();</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 标记写库</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">markWrite</span><span class="params">()</span></span>&#123;</span><br><span class="line">    putDataSource(WRITE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 标记读库</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">markRead</span><span class="params">()</span></span>&#123;</span><br><span class="line">    putDataSource(READ);</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="6-在service层可以采用注解的方式：-DataSource-“read”-或者-DataSource-“write”"><a href="#6-在service层可以采用注解的方式：-DataSource-“read”-或者-DataSource-“write”" class="headerlink" title="6.在service层可以采用注解的方式：@DataSource(“read”) 或者@DataSource(“write”)"></a>6.在service层可以采用注解的方式：@DataSource(“read”) 或者@DataSource(“write”)</h4><p>例如:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@DataSource</span>(<span class="string">"write"</span>)</span><br><span class="line">  <span class="function"><span class="keyword">public</span> DayRead <span class="title">getBookDayRead</span><span class="params">(Map&lt;String, Object&gt; parameter)</span></span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">this</span>.dayReadDao.getBookDayRead(parameter);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@DataSource</span>(<span class="string">"read"</span>)</span><br><span class="line">  <span class="function"><span class="keyword">public</span> DayExercise <span class="title">getExerciseDayRead</span><span class="params">(Map&lt;String, Object&gt; parameter)</span></span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">this</span>.dayReadDao.getExerciseDayRead(parameter);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>===============================================</p><p>个人github：<a href="https://github.com/zhangqian0710?tab=repositories" target="_blank" rel="noopener">https://github.com/zhangqian0710?tab=repositories</a></p><p>个人csdn:<a href="https://mp.csdn.net/mdeditor/96853700#" target="_blank" rel="noopener">https://mp.csdn.net/mdeditor/96853700#</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;配置Mysql读写分离方法&quot;&gt;&lt;a href=&quot;#配置Mysql读写分离方法&quot; class=&quot;headerlink&quot; title=&quot;配置Mysql读写分离方法&quot;&gt;&lt;/a&gt;配置Mysql读写分离方法&lt;/h2&gt;&lt;h4 id=&quot;1-在db-properties文件下，配
      
    
    </summary>
    
      <category term="Mysql" scheme="http://yoursite.com/categories/Mysql/"/>
    
    
  </entry>
  
  <entry>
    <title>5.日常无聊总结002</title>
    <link href="http://yoursite.com/2019/08/02/5.%E6%97%A5%E5%B8%B8%E6%97%A0%E8%81%8A%E6%80%BB%E7%BB%93002/"/>
    <id>http://yoursite.com/2019/08/02/5.日常无聊总结002/</id>
    <published>2019-08-02T01:46:02.091Z</published>
    <updated>2019-08-19T07:37:53.366Z</updated>
    
    <content type="html"><![CDATA[<h2 id="日常无聊总结002-Shiro框架学习"><a href="#日常无聊总结002-Shiro框架学习" class="headerlink" title="日常无聊总结002-Shiro框架学习"></a>日常无聊总结002-Shiro框架学习</h2><h6 id="1-基础学习"><a href="#1-基础学习" class="headerlink" title="1.基础学习"></a>1.基础学习</h6><p>三个核心组件：Subject, SecurityManager 和 Realms.</p><p>Subject：即“当前操作用户”。但是，在Shiro中，Subject这一概念并不仅仅指人，也可以是第三方进程、后台帐户（Daemon Account）或其他类似事物。它仅仅意味着“当前跟软件交互的东西”。但考虑到大多数目的和用途，你可以把它认为是Shiro的“用户”概念。<br>　　Subject代表了当前用户的安全操作，SecurityManager则管理所有用户的安全操作。<br>　　SecurityManager：它是Shiro框架的核心，典型的Facade模式，Shiro通过SecurityManager来管理内部组件实例，并通过它来提供安全管理的各种服务。<br>　　Realm： Realm充当了Shiro与应用安全数据间的“桥梁”或者“连接器”。也就是说，当对用户执行认证（登录）和授权（访问控制）验证时，Shiro会从应用配置的Realm中查找用户及其权限信息。</p><p>2.shiro框架运行原理图（来自网络）</p><p><img src="C:%5CUsers%5CDELL%5CDesktop%5Caaa.png" alt="aaa"></p><p>3.shiro框架和sping security框架的比较：</p><p>（1）shiro框架比sc框架用起来更简单灵活，不用依赖于其他框架（例如spring）就可以独立运行。</p><p>（2）srping security 除了不能脱离Spring，shiro的功能它都有。而且Spring Security对Oauth、OpenID也有支持,Shiro则需要自己手动实现。（可以带上srping 看着就很牛X的一个框架）</p><p>（3）shiro可以把权限细化到按钮层面（在数据库存储一个用户的所有权限，包括登录权限、菜单展示权限以及细化到每个按钮的权限）</p><p>【详细使用步骤见大佬CSDN：<a href="https://www.cnblogs.com/jpfss/p/8352031.html" target="_blank" rel="noopener">https://www.cnblogs.com/jpfss/p/8352031.html</a>  】</p><p>===============================================</p><p>4.尽量少用Arrays.asList(“x”,”xx”)方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">List&lt;String&gt; list = Arrays.asList(<span class="string">"a"</span>, <span class="string">"b"</span>, <span class="string">"c"</span>);</span><br><span class="line">list.add(<span class="string">"c"</span>);</span><br><span class="line">System.out.println(list.toString());</span><br></pre></td></tr></table></figure><p>add，clear，remove的时候会抛出java.lang.UnsupportedOperationException异常，原因如下：</p><p><img src="C:%5CUsers%5CDELL%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1564745839650.png" alt="1564745839650"></p><p>调用asList方法，返回一个ArrayList，但是这个ArrayList不是真的ArrayList，而是Arrays类中的，它自己没有实现add（）、remove（）等方法，继承父类AbstactList中实现的add方法直接抛出了异常，如下图：</p><p><img src="C:%5CUsers%5CDELL%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1564745824581.png" alt="1564745824581"></p><p><img src="C:%5CUsers%5CDELL%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1564746229107.png" alt="1564746229107"></p><p>所以综上所述，尽量不要使用Arrays.asList()方法将数组转化成字符串。</p><p>5.转化成字符串的方法为：</p><p>（1）非要使用Arrays.asList（）的方法，这样可以变成真正的ArrayList</p><p><img src="C:%5CUsers%5CDELL%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1564746363122.png" alt="1564746363122"></p><p>（2）正常循环方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//需要转换的数组</span></span><br><span class="line">       String[] arrays = <span class="keyword">new</span> String[]&#123;<span class="string">"aa"</span>,<span class="string">"bb"</span>,<span class="string">"cc"</span>&#125;;</span><br><span class="line">       <span class="comment">//初始化list</span></span><br><span class="line">       List&lt;String&gt; list = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line">       <span class="comment">//使用for循环转换为list</span></span><br><span class="line">       <span class="keyword">for</span>(String str : arrays)&#123;</span><br><span class="line">           list.add(str);</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="comment">//打印得到的list</span></span><br><span class="line">       System.out.println(list);</span><br></pre></td></tr></table></figure><p>===============================================</p><p>个人github：<a href="https://github.com/zhangqian0710?tab=repositories" target="_blank" rel="noopener">https://github.com/zhangqian0710?tab=repositories</a></p><p>个人csdn:<a href="https://mp.csdn.net/mdeditor/96853700#" target="_blank" rel="noopener">https://mp.csdn.net/mdeditor/96853700#</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;日常无聊总结002-Shiro框架学习&quot;&gt;&lt;a href=&quot;#日常无聊总结002-Shiro框架学习&quot; class=&quot;headerlink&quot; title=&quot;日常无聊总结002-Shiro框架学习&quot;&gt;&lt;/a&gt;日常无聊总结002-Shiro框架学习&lt;/h2&gt;&lt;h6 i
      
    
    </summary>
    
      <category term="知识点总结" scheme="http://yoursite.com/categories/%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/"/>
    
    
  </entry>
  
  <entry>
    <title>4.企业文化心得体会001</title>
    <link href="http://yoursite.com/2019/07/26/4.%E4%BC%81%E4%B8%9A%E6%96%87%E5%8C%96%E5%BF%83%E5%BE%97%E4%BD%93%E4%BC%9A001/"/>
    <id>http://yoursite.com/2019/07/26/4.企业文化心得体会001/</id>
    <published>2019-07-26T11:37:47.925Z</published>
    <updated>2019-08-19T07:38:23.255Z</updated>
    
    <content type="html"><![CDATA[<h3 id="企业文化之十二条令：（内容来自公司企业文化书籍-）"><a href="#企业文化之十二条令：（内容来自公司企业文化书籍-）" class="headerlink" title="企业文化之十二条令：（内容来自公司企业文化书籍~）"></a>企业文化之十二条令：（内容来自公司企业文化书籍~）</h3><p>（1）指令：确认指令、及时报告、亲撰周报</p><p>（2）行动：说到做到、保持准时、解说问题</p><p>（3）汇报：三条总结、一页报告、统计分析</p><p>（4）沟通：日清邮件、会议记录、写备忘录</p><p>个人心得：一个公司就像是一支军队，类似于现在公司，有指挥人员（管理岗），冲锋手（销售大佬），阵地机枪手（程序猿开发工程师）等。</p><h4 id="1-确认指令："><a href="#1-确认指令：" class="headerlink" title="1.确认指令："></a>1.确认指令：</h4><p>（1）要及时回复消息，那怕是回复个好的or收到~</p><p>（2）对于复杂命令，或者是功能模块的完成给一个心里计划完成的期限。</p><p>（未完待续。。。）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;企业文化之十二条令：（内容来自公司企业文化书籍-）&quot;&gt;&lt;a href=&quot;#企业文化之十二条令：（内容来自公司企业文化书籍-）&quot; class=&quot;headerlink&quot; title=&quot;企业文化之十二条令：（内容来自公司企业文化书籍~）&quot;&gt;&lt;/a&gt;企业文化之十二条令：（
      
    
    </summary>
    
      <category term="工作感悟" scheme="http://yoursite.com/categories/%E5%B7%A5%E4%BD%9C%E6%84%9F%E6%82%9F/"/>
    
    
  </entry>
  
  <entry>
    <title>3.日常无聊总结001</title>
    <link href="http://yoursite.com/2019/07/22/3.%E6%97%A5%E5%B8%B8%E6%97%A0%E8%81%8A%E6%80%BB%E7%BB%93001/"/>
    <id>http://yoursite.com/2019/07/22/3.日常无聊总结001/</id>
    <published>2019-07-22T02:30:19.922Z</published>
    <updated>2019-08-19T07:37:44.165Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Object类的常见方法："><a href="#Object类的常见方法：" class="headerlink" title="Object类的常见方法："></a>Object类的常见方法：</h3><p>1.hashCode（）； </p><p>2.equals（）；</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Java中equals和==的区别</span><br><span class="line">java中的数据类型，可分为两类： </span><br><span class="line">（1）基本数据类型，也称原始数据类型。byte,short,char,int,long,float,double,boolean </span><br><span class="line">  他们之间的比较，应用双等号（==）,比较的是他们的值。 </span><br><span class="line">（2）复合数据类型(类) </span><br><span class="line">  当他们用（==）进行比较的时候，比较的是他们在内存中的存放地址，所以，除非是同一个new出来的对象，他们的比较后的结果为true，否则比较后结果为false。 JAVA当中所有的类都是继承于Object这个基类的，在Object中的基类中定义了一个equals的方法，这个方法的初始行为是比较对象的内存地 址，但在一些类库当中这个方法被覆盖掉了，如String,Integer,Date在这些类当中equals有其自身的实现，而不再是比较类在堆内存中的存放地址了。</span><br><span class="line">  对于复合数据类型之间进行equals比较，在没有覆写equals方法的情况下，他们之间的比较还是基于他们在内存中的存放位置的地址值的，因为Object的equals方法也是用双等号（==）进行比较的，所以比较后的结果跟双等号（==）的结果相同。</span><br></pre></td></tr></table></figure><p>3.clone（）；</p><p>//注意事项：此方法可以实现对一个类的克隆操作，但是clone（）方法会抛出CloneNotSupportedException。要调用clone()方法，我们需要将调用放在try-catch块中，或者重新抛出异常。</p><p>4.toString（）；</p><p><strong>//线程大家族方法，通常在多线程方法中使用。</strong></p><p>5.wait（）；//通常传入一个等待时间的参数，如果需要提前解束，可以调用notify（）方法。</p><p>6.notify（）、notifyall（）等</p><p>7.finalize（）//通常在JVM的GC机制（垃圾回收）中使用此方法。</p><p>==========================================</p><h3 id="Mysql常见小问题："><a href="#Mysql常见小问题：" class="headerlink" title="Mysql常见小问题："></a>Mysql常见小问题：</h3><p><strong>count（*）和count（1）的区别，更推荐用count（column列名）：</strong></p><p>1.count（）为聚合函数，是对select的结果集进行技术，但是需要参数不为NULL。</p><p>但是count（ * ）不关心返回值是否为null都会计算他的count，然而count（1）中的1为恒真表达式，所以count（ * ）和count（1）本质上没有区别。</p><p>2.count（column列名）则会判断结果集每一条数据的column列名是否为null再进行count。所以性能远远低于前两者。</p><p>3.效率比较：</p><p>count(*)=count(1)&gt;count(primary key)&gt;count(column列名)</p><p><strong>大于小于和like等常见用法：</strong></p><p>1.大于小于会导致<strong>索引失效</strong>，例如：explain select  * from tableA where age &gt;= 15 and age &lt;= 18 的type就是ALL。</p><p>2.like查询是以%开头，索引失效；以%结尾，索引有效</p><p>（理论上说：统计阅读月份天表的时候数据量小：用 “readDay” like “201801%” 效率高于 “readDay” &gt;= “20180101”  and “readDay” &lt;= “20180131 ）</p><p>===========================================</p><h3 id="语法糖："><a href="#语法糖：" class="headerlink" title="语法糖："></a><strong>语法糖：</strong></h3><p>语法糖（Syntactic Sugar），也称糖衣语法，是由英国计算机学家 Peter.J.Landin 发明的一个术语，指在计算机语言中添加的某种语法，这种语法对语言的功能并没有影响，但是更方便程序员使用。简而言之，语法糖让程序更加简洁，有更高的可读性。</p><p>我们所熟知的编程语言中几乎都有语法糖。作者认为，语法糖的多少是评判一个语言够不够牛逼的标准之一。</p><h3 id="解语法糖："><a href="#解语法糖：" class="headerlink" title="解语法糖："></a><strong>解语法糖</strong>：</h3><p>前面提到过，语法糖的存在主要是方便开发人员使用。但其实，<strong>Java虚拟机并不支持这些语法糖。这些语法糖在编译阶段就会被还原成简单的基础语法结构</strong>，这个过程就是解语法糖</p><p>如果你去看com.sun.tools.javac.main.JavaCompiler的源码，你会发现在compile()中有一个步骤就是调用desugar()，这个方法就是负责解语法糖的实现的。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Object类的常见方法：&quot;&gt;&lt;a href=&quot;#Object类的常见方法：&quot; class=&quot;headerlink&quot; title=&quot;Object类的常见方法：&quot;&gt;&lt;/a&gt;Object类的常见方法：&lt;/h3&gt;&lt;p&gt;1.hashCode（）； &lt;/p&gt;
&lt;p&gt;2.eq
      
    
    </summary>
    
      <category term="知识点总结" scheme="http://yoursite.com/categories/%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/"/>
    
    
  </entry>
  
  <entry>
    <title>1.Hello World</title>
    <link href="http://yoursite.com/2019/07/18/1.HolleWorld/"/>
    <id>http://yoursite.com/2019/07/18/1.HolleWorld/</id>
    <published>2019-07-18T06:54:14.428Z</published>
    <updated>2019-08-03T00:55:12.733Z</updated>
    
    <content type="html"><![CDATA[<h2 id="HelloWorld！"><a href="#HelloWorld！" class="headerlink" title="HelloWorld！"></a>HelloWorld！</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;HelloWorld！&quot;&gt;&lt;a href=&quot;#HelloWorld！&quot; class=&quot;headerlink&quot; title=&quot;HelloWorld！&quot;&gt;&lt;/a&gt;HelloWorld！&lt;/h2&gt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>2.Hadoop安装</title>
    <link href="http://yoursite.com/2019/07/18/2.Hadoop%E5%AE%89%E8%A3%85/"/>
    <id>http://yoursite.com/2019/07/18/2.Hadoop安装/</id>
    <published>2019-07-18T06:54:14.428Z</published>
    <updated>2019-08-19T07:38:40.788Z</updated>
    
    <content type="html"><![CDATA[<h3 id="准备："><a href="#准备：" class="headerlink" title="准备："></a>准备：</h3><p>  采用NAT方式联网</p><p>  网关地址：192.168.33.1</p><p>  3个服务器节点IP地址：192.168.33.101、192.168.33.102、192.168.33.103</p><p>  子网掩码：255.255.255.0</p><p>=======================</p><p>  添加HADOOP用户</p><p>  为HADOOP用户分配sudoer权限</p><p>  同步时间</p><p>  设置主机名</p><p>  hdp-node-01</p><p>  hdp-node-02</p><p>  hdp-node-03</p><p>  配置内网域名映射：</p><p> 192.168.33.101          hdp-node-01</p><p> 192.168.33.102          hdp-node-02</p><p> 192.168.33.103          hdp-node-03</p><p> 配置ssh免密登陆</p><p> 配置防火墙</p><h4 id="（前提在虚拟机中安装好JDK，hadoop依赖于java开发）"><a href="#（前提在虚拟机中安装好JDK，hadoop依赖于java开发）" class="headerlink" title="（前提在虚拟机中安装好JDK，hadoop依赖于java开发）"></a>（前提在虚拟机中安装好JDK，hadoop依赖于java开发）</h4><h4 id="1上传HADOOP安装包"><a href="#1上传HADOOP安装包" class="headerlink" title="1上传HADOOP安装包"></a>1上传HADOOP安装包</h4><h4 id="2规划安装目录-home-hadoop-apps-hadoop-2-6-1"><a href="#2规划安装目录-home-hadoop-apps-hadoop-2-6-1" class="headerlink" title="2规划安装目录  /home/hadoop/apps/hadoop-2.6.1"></a>2规划安装目录  /home/hadoop/apps/hadoop-2.6.1</h4><h4 id="3解压安装包"><a href="#3解压安装包" class="headerlink" title="3解压安装包"></a>3解压安装包</h4><h4 id="4修改配置文件-HADOOP-HOME-etc-hadoop"><a href="#4修改配置文件-HADOOP-HOME-etc-hadoop" class="headerlink" title="4修改配置文件  $HADOOP_HOME/etc/hadoop/"></a>4修改配置文件  $HADOOP_HOME/etc/hadoop/</h4><h4 id="5最简化配置如下："><a href="#5最简化配置如下：" class="headerlink" title="5最简化配置如下："></a>5最简化配置如下：</h4><h5 id="vi-hadoop-env-sh"><a href="#vi-hadoop-env-sh" class="headerlink" title="vi  hadoop-env.sh"></a>vi  hadoop-env.sh</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># The java implementation to use.</span><br><span class="line"></span><br><span class="line">export JAVA_HOME=/home/hadoop/apps/jdk1.7.0_51</span><br></pre></td></tr></table></figure><h5 id="vi-core-site-xml"><a href="#vi-core-site-xml" class="headerlink" title="vi  core-site.xml"></a>vi  core-site.xml</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;configuration&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;fs.defaultFS&lt;/name&gt;</span><br><span class="line">&lt;value&gt;hdfs://hdp-node-01:9000&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;hadoop.tmp.dir&lt;/name&gt;</span><br><span class="line">&lt;value&gt;/home/HADOOP/apps/hadoop-2.6.1/tmp&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure><h5 id="vi-hdfs-site-xml"><a href="#vi-hdfs-site-xml" class="headerlink" title="vi  hdfs-site.xml"></a>vi  hdfs-site.xml</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;configuration&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;dfs.namenode.name.dir&lt;/name&gt;</span><br><span class="line">&lt;value&gt;/home/hadoop/data/name&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;dfs.datanode.data.dir&lt;/name&gt;</span><br><span class="line">&lt;value&gt;/home/hadoop/data/data&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line"></span><br><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;dfs.replication&lt;/name&gt;</span><br><span class="line">&lt;value&gt;3&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line"></span><br><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;dfs.secondary.http.address&lt;/name&gt;</span><br><span class="line">&lt;value&gt;hdp-node-01:50090&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure><h5 id="vi-mapred-site-xml"><a href="#vi-mapred-site-xml" class="headerlink" title="vi  mapred-site.xml"></a>vi  mapred-site.xml</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;configuration&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;mapreduce.framework.name&lt;/name&gt;</span><br><span class="line">&lt;value&gt;yarn&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure><h5 id="vi-yarn-site-xml"><a href="#vi-yarn-site-xml" class="headerlink" title="vi  yarn-site.xml"></a>vi  yarn-site.xml</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;configuration&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;yarn.resourcemanager.hostname&lt;/name&gt;</span><br><span class="line">&lt;value&gt;hadoop01&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line"></span><br><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt;</span><br><span class="line">&lt;value&gt;mapreduce_shuffle&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure><h5 id="vi-salves"><a href="#vi-salves" class="headerlink" title="vi  salves"></a>vi  salves</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hdp-node-01</span><br><span class="line">hdp-node-02</span><br><span class="line">hdp-node-03</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;准备：&quot;&gt;&lt;a href=&quot;#准备：&quot; class=&quot;headerlink&quot; title=&quot;准备：&quot;&gt;&lt;/a&gt;准备：&lt;/h3&gt;&lt;p&gt;  采用NAT方式联网&lt;/p&gt;
&lt;p&gt;  网关地址：192.168.33.1&lt;/p&gt;
&lt;p&gt;  3个服务器节点IP地址：192.16
      
    
    </summary>
    
      <category term="hadoop" scheme="http://yoursite.com/categories/hadoop/"/>
    
    
  </entry>
  
</feed>
